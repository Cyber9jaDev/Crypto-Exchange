{"version":3,"file":"cognitiveservices-newssearch.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/newsOperationsMappers.ts","../src/models/parameters.ts","../src/operations/newsOperations.ts","../src/newsSearchClientContext.ts","../src/newsSearchClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ServiceClientOptions } from \"@azure/ms-rest-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Contains the possible cases for ResponseBase.\n */\nexport type ResponseBaseUnion = ResponseBase | IdentifiableUnion;\n\n/**\n * Response base\n */\nexport interface ResponseBase {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ResponseBase\";\n}\n\n/**\n * Contains the possible cases for Identifiable.\n */\nexport type IdentifiableUnion = Identifiable | ResponseUnion;\n\n/**\n * Defines the identity of a resource.\n */\nexport interface Identifiable {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Identifiable\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Contains the possible cases for Response.\n */\nexport type ResponseUnion = Response | AnswerUnion | ThingUnion | ErrorResponse;\n\n/**\n * Defines a response. All schemas that could be returned at the root of a response should inherit\n * from this\n */\nexport interface Response {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Response\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n}\n\n/**\n * Contains the possible cases for Thing.\n */\nexport type ThingUnion = Thing | NewsTopic | CreativeWorkUnion | Organization;\n\n/**\n * Defines a thing.\n */\nexport interface Thing {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Thing\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for CreativeWork.\n */\nexport type CreativeWorkUnion = CreativeWork | ArticleUnion | MediaObjectUnion;\n\n/**\n * The most generic kind of creative work, including books, movies, photographs, software programs,\n * etc.\n */\nexport interface CreativeWork {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"CreativeWork\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * A video of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly video?: VideoObject;\n}\n\n/**\n * Contains the possible cases for Article.\n */\nexport type ArticleUnion = Article | NewsArticle;\n\n/**\n * An interface representing Article.\n */\nexport interface Article {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Article\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * A video of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly video?: VideoObject;\n  /**\n   * The number of words in the text of the Article.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly wordCount?: number;\n}\n\n/**\n * Defines a news article.\n */\nexport interface NewsArticle {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"NewsArticle\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * A video of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly video?: VideoObject;\n  /**\n   * The number of words in the text of the Article.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly wordCount?: number;\n  /**\n   * The news category that the article belongs to. For example, Sports. If the news category\n   * cannot be determined, the article does not include this field.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly category?: string;\n  /**\n   * A Boolean value that indicates whether the news article is a headline. If true, the article is\n   * a headline. The article includes this field only for news categories requests that do not\n   * specify the category query parameter.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly headline?: boolean;\n  /**\n   * A list of related news articles.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly clusteredArticles?: NewsArticle[];\n}\n\n/**\n * Contains the possible cases for Answer.\n */\nexport type AnswerUnion = Answer | SearchResultsAnswerUnion | TrendingTopics;\n\n/**\n * Defines an answer.\n */\nexport interface Answer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Answer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n}\n\n/**\n * Contains the possible cases for SearchResultsAnswer.\n */\nexport type SearchResultsAnswerUnion = SearchResultsAnswer | News;\n\n/**\n * Defines a search result answer.\n */\nexport interface SearchResultsAnswer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"SearchResultsAnswer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n}\n\n/**\n * Defines a news answer.\n */\nexport interface News {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"News\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * An array of NewsArticle objects that contain information about news articles that are relevant\n   * to the query. If there are no results to return for the request, the array is empty.\n   */\n  value: NewsArticle[];\n  /**\n   * Location of local news\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly location?: string;\n}\n\n/**\n * Contains the possible cases for MediaObject.\n */\nexport type MediaObjectUnion = MediaObject | ImageObject | VideoObject;\n\n/**\n * Defines a media object.\n */\nexport interface MediaObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"MediaObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * A video of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly video?: VideoObject;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n}\n\n/**\n * Defines an image\n */\nexport interface ImageObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * A video of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly video?: VideoObject;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n  /**\n   * The URL to a thumbnail of the image\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n}\n\n/**\n * Defines a search query.\n */\nexport interface Query {\n  /**\n   * The query string. Use this string as the query term in a new search request.\n   */\n  text: string;\n  /**\n   * The display version of the query term. This version of the query term may contain special\n   * characters that highlight the search term found in the query string. The string contains the\n   * highlighting characters only if the query enabled hit highlighting\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayText?: string;\n  /**\n   * The URL that takes the user to the Bing search results page for the query.Only related search\n   * results include this field.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The URL that you use to get the results of the related search. Before using the URL, you must\n   * append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use\n   * this URL if you're displaying the results in your own user interface. Otherwise, use the\n   * webSearchUrl URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly searchLink?: string;\n  /**\n   * The URL to a thumbnail of a related image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n}\n\n/**\n * An interface representing NewsTopic.\n */\nexport interface NewsTopic {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"News/Topic\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * A Boolean value that indicates whether the topic is considered breaking news. If the topic is\n   * considered breaking news, the value is true.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isBreakingNews?: boolean;\n  /**\n   * A search query term that returns this trending topic.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly query?: Query;\n  /**\n   * The URL to the Bing News search results for the search query term\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly newsSearchUrl?: string;\n}\n\n/**\n * An interface representing TrendingTopics.\n */\nexport interface TrendingTopics {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"TrendingTopics\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * A list of trending news topics on Bing\n   */\n  value: NewsTopic[];\n}\n\n/**\n * Defines a video object that is relevant to the query.\n */\nexport interface VideoObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"VideoObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * A video of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly video?: VideoObject;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly motionThumbnailUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly motionThumbnailId?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly embedHtml?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly allowHttpsEmbed?: boolean;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly viewCount?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly videoId?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly allowMobileEmbed?: boolean;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isSuperfresh?: boolean;\n}\n\n/**\n * Defines an organization.\n */\nexport interface Organization {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Organization\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Defines the error that occurred.\n */\nexport interface ErrorModel {\n  /**\n   * The error code that identifies the category of error. Possible values include: 'None',\n   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',\n   * 'InsufficientAuthorization'. Default value: 'None'.\n   */\n  code: ErrorCode;\n  /**\n   * The error code that further helps to identify the error. Possible values include:\n   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',\n   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',\n   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subCode?: ErrorSubCode;\n  /**\n   * A description of the error.\n   */\n  message: string;\n  /**\n   * A description that provides additional information about the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly moreDetails?: string;\n  /**\n   * The parameter in the request that caused the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parameter?: string;\n  /**\n   * The parameter's value in the request that was not valid.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The top-level response that represents a failed request.\n */\nexport interface ErrorResponse {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ErrorResponse\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A list of errors that describe the reasons why the request failed.\n   */\n  errors: ErrorModel[];\n}\n\n/**\n * An interface representing NewsSearchClientOptions.\n */\nexport interface NewsSearchClientOptions extends ServiceClientOptions {\n  /**\n   * Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * \"https://westus.api.cognitive.microsoft.com\", \"https://api.cognitive.microsoft.com\"). Default\n   * value: 'https://api.cognitive.microsoft.com'.\n   */\n  endpoint?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface NewsSearchOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * A 2-character country code of the country where the results come from. This API supports only\n   * the United States market. If you specify this query parameter, it must be set to us. If you\n   * set this parameter, you must also specify the Accept-Language header. Bing uses the first\n   * supported language it finds from the languages list, and combine that language with the\n   * country code that you specify to determine the market to return results for. If the languages\n   * list does not include a supported language, Bing finds the closest language and market that\n   * supports the request, or it may use an aggregated or default market for the results instead of\n   * a specified one. You should use this query parameter and the Accept-Language query parameter\n   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query\n   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify\n   * both.\n   */\n  countryCode?: string;\n  /**\n   * The number of news articles to return in the response. The actual number delivered may be less\n   * than requested. The default is 10 and the maximum value is 100. The actual number delivered\n   * may be less than requested.You may use this parameter along with the offset parameter to page\n   * results. For example, if your user interface displays 20 articles per page, set count to 20\n   * and offset to 0 to get the first page of results. For each subsequent page, increment offset\n   * by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in\n   * results.\n   */\n  count?: number;\n  /**\n   * Filter news by the date and time that Bing discovered the news. The following are the possible\n   * filter values. Day: Return news discovered within the last 24 hours. Week: Return news\n   * discovered within the last 7 days. Month: Return news discovered within the last 30 days. Use\n   * this parameter only with the News Search API. Do not specify this parameter when calling the\n   * News Category API or the Trending Topics API. Possible values include: 'Day', 'Week', 'Month'\n   */\n  freshness?: Freshness;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  market?: string;\n  /**\n   * The zero-based offset that indicates the number of news to skip before returning news. The\n   * default is 0. The offset should be less than\n   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\n   * - count). Use this parameter along with the count parameter to page results. For example, if\n   * your user interface displays 20 news per page, set count to 20 and offset to 0 to get the\n   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,\n   * 40). It is possible for multiple pages to include some overlap in results.\n   */\n  offset?: number;\n  /**\n   * A Boolean value that determines whether the image's contentUrl contains a URL that points to a\n   * thumbnail of the original article's image or the image itself. If the article includes an\n   * image, and this parameter is set to true, the image's contentUrl property contains a URL that\n   * you may use to download the original image from the publisher's website. Otherwise, if this\n   * parameter is false, the image's contentUrl and thumbnailUrl URLs both point to the same\n   * thumbnail image. Use this parameter only with the News Search API. Do not specify this\n   * parameter when calling the Trending Topics API or News Category API.\n   */\n  originalImage?: boolean;\n  /**\n   * Filter news for adult content. The following are the possible filter values. Off: Return news\n   * articles with adult text, images, or videos. Moderate: Return news articles with adult text\n   * but not adult images or videos. Strict: Do not return news articles with adult text, images,\n   * or videos. If the request comes from a market that Bing's adult policy requires that\n   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the\n   * site: query operator, there is the chance that the response may contain adult content\n   * regardless of what the safeSearch query parameter is set to. Use site: only if you are aware\n   * of the content on the site and your scenario supports the possibility of adult content.\n   * Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\n   * header are mutually exclusive; do not specify both. A user interface string is a string that's\n   * used as a label in a user interface. There are few user interface strings in the JSON response\n   * objects. Also, any links to Bing.com properties in the response objects apply the specified\n   * language.\n   */\n  setLang?: string;\n  /**\n   * The order to return the news in. The following are the possible case-insensitive values. Date:\n   * If the request is through the News Search API, the response returns news articles sorted by\n   * date from the most recent to the oldest. If the request is through the News Trending Topics\n   * API, the response returns trending topics sorted by date from the most recent to the oldest.\n   */\n  sortBy?: string;\n  /**\n   * A Boolean value that determines whether display strings contain decoration markers such as hit\n   * highlighting characters. If true, the strings may include markers. The default is false. To\n   * specify whether to use Unicode characters or HTML tags as the markers, see the\n   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\n   * query parameter. For information about hit highlighting, see [Hit\n   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\n   */\n  textDecorations?: boolean;\n  /**\n   * The type of markers to use for text decorations (see the textDecorations query parameter).\n   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.\n   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and\n   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to\n   * mark content that needs special formatting. For example, use <b> tags to highlight query terms\n   * in display strings. The default is Raw. For display strings that contain escapable HTML\n   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as\n   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n   */\n  textFormat?: TextFormat;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface NewsCategoryOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * A 2-character country code of the country where the results come from. This API supports only\n   * the United States market. If you specify this query parameter, it must be set to us. If you\n   * set this parameter, you must also specify the Accept-Language header. Bing uses the first\n   * supported language it finds from the languages list, and combine that language with the\n   * country code that you specify to determine the market to return results for. If the languages\n   * list does not include a supported language, Bing finds the closest language and market that\n   * supports the request, or it may use an aggregated or default market for the results instead of\n   * a specified one. You should use this query parameter and the Accept-Language query parameter\n   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query\n   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify\n   * both.\n   */\n  countryCode?: string;\n  /**\n   * The category of articles to return. For example, Sports articles or Entertainment articles.\n   * For a list of possible categories, see [News Categories by\n   * Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\n   * Use this parameter only with News Category API. If you do not specify this parameter, the\n   * response includes both: Headline articles typically published in the last 24 hours from any\n   * category and articles from each parent category (up to four articles). If the article is a\n   * headline, the article's headline field is set to true. By default, the response includes up to\n   * 12 headline articles. To specify the number of headline articles to return, set the\n   * [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\n   * query parameter.\n   */\n  category?: string;\n  /**\n   * The number of news articles to return in the response. The actual number delivered may be less\n   * than requested. The default is 10 and the maximum value is 100. The actual number delivered\n   * may be less than requested.You may use this parameter along with the offset parameter to page\n   * results. For example, if your user interface displays 20 articles per page, set count to 20\n   * and offset to 0 to get the first page of results. For each subsequent page, increment offset\n   * by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in\n   * results. If you do not specify the\n   * [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\n   * parameter, Bing ignores this parameter.\n   */\n  count?: number;\n  /**\n   * The number of headline articles to return in the response. The default is 12. Specify this\n   * parameter only if you do not specify the\n   * [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\n   * parameter.\n   */\n  headlineCount?: number;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  market?: string;\n  /**\n   * The zero-based offset that indicates the number of news to skip before returning news. The\n   * default is 0. The offset should be less than\n   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\n   * - count). Use this parameter along with the count parameter to page results. For example, if\n   * your user interface displays 20 news per page, set count to 20 and offset to 0 to get the\n   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,\n   * 40). It is possible for multiple pages to include some overlap in results. If you do not\n   * specify the\n   * [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\n   * parameter, Bing ignores this parameter.\n   */\n  offset?: number;\n  /**\n   * A Boolean value that determines whether the image's contentUrl contains a URL that points to a\n   * thumbnail of the original article's image or the image itself. If the article includes an\n   * image, and this parameter is set to true, the image's contentUrl property contains a URL that\n   * you may use to download the original image from the publisher's website. Otherwise, if this\n   * parameter is false, the image's contentUrl and thumbnailUrl URLs both point to the same\n   * thumbnail image. Use this parameter only with the News Search API or News Category API.\n   * Trending Topics API ignore this parameter.\n   */\n  originalImage?: boolean;\n  /**\n   * Filter news for adult content. The following are the possible filter values. Off: Return news\n   * articles with adult text, images, or videos. Moderate: Return news articles with adult text\n   * but not adult images or videos. Strict: Do not return news articles with adult text, images,\n   * or videos. If the request comes from a market that Bing's adult policy requires that\n   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the\n   * site: query operator, there is the chance that the response may contain adult content\n   * regardless of what the safeSearch query parameter is set to. Use site: only if you are aware\n   * of the content on the site and your scenario supports the possibility of adult content.\n   * Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\n   * header are mutually exclusive; do not specify both. A user interface string is a string that's\n   * used as a label in a user interface. There are few user interface strings in the JSON response\n   * objects. Also, any links to Bing.com properties in the response objects apply the specified\n   * language.\n   */\n  setLang?: string;\n  /**\n   * A Boolean value that determines whether display strings contain decoration markers such as hit\n   * highlighting characters. If true, the strings may include markers. The default is false. To\n   * specify whether to use Unicode characters or HTML tags as the markers, see the\n   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\n   * query parameter. For information about hit highlighting, see [Hit\n   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\n   */\n  textDecorations?: boolean;\n  /**\n   * The type of markers to use for text decorations (see the textDecorations query parameter).\n   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.\n   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and\n   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to\n   * mark content that needs special formatting. For example, use <b> tags to highlight query terms\n   * in display strings. The default is Raw. For display strings that contain escapable HTML\n   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as\n   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n   */\n  textFormat?: TextFormat;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface NewsTrendingOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * A 2-character country code of the country where the results come from. This API supports only\n   * the United States market. If you specify this query parameter, it must be set to us. If you\n   * set this parameter, you must also specify the Accept-Language header. Bing uses the first\n   * supported language it finds from the languages list, and combine that language with the\n   * country code that you specify to determine the market to return results for. If the languages\n   * list does not include a supported language, Bing finds the closest language and market that\n   * supports the request, or it may use an aggregated or default market for the results instead of\n   * a specified one. You should use this query parameter and the Accept-Language query parameter\n   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query\n   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify\n   * both.\n   */\n  countryCode?: string;\n  /**\n   * The number of news articles to return in the response. The actual number delivered may be less\n   * than requested. The default is 10 and the maximum value is 100. The actual number delivered\n   * may be less than requested.You may use this parameter along with the offset parameter to page\n   * results. For example, if your user interface displays 20 articles per page, set count to 20\n   * and offset to 0 to get the first page of results. For each subsequent page, increment offset\n   * by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in\n   * results.\n   */\n  count?: number;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  market?: string;\n  /**\n   * The zero-based offset that indicates the number of news to skip before returning news. The\n   * default is 0. The offset should be less than\n   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\n   * - count). Use this parameter along with the count parameter to page results. For example, if\n   * your user interface displays 20 news per page, set count to 20 and offset to 0 to get the\n   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,\n   * 40). It is possible for multiple pages to include some overlap in results.\n   */\n  offset?: number;\n  /**\n   * Filter news for adult content. The following are the possible filter values. Off: Return news\n   * articles with adult text, images, or videos. Moderate: Return news articles with adult text\n   * but not adult images or videos. Strict: Do not return news articles with adult text, images,\n   * or videos. If the request comes from a market that Bing's adult policy requires that\n   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the\n   * site: query operator, there is the chance that the response may contain adult content\n   * regardless of what the safeSearch query parameter is set to. Use site: only if you are aware\n   * of the content on the site and your scenario supports the possibility of adult content.\n   * Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\n   * header are mutually exclusive; do not specify both. A user interface string is a string that's\n   * used as a label in a user interface. There are few user interface strings in the JSON response\n   * objects. Also, any links to Bing.com properties in the response objects apply the specified\n   * language.\n   */\n  setLang?: string;\n  /**\n   * The Unix epoch time (Unix timestamp) that Bing uses to select the trending topics. Bing\n   * returns trending topics that it discovered on or after the specified date and time, not the\n   * date the topic was published. To use this parameter, also specify the sortBy parameter. Use\n   * this parameter only with the News Trending Topics API. Do not specify this parameter when\n   * calling the News Search API or News Category API.\n   */\n  since?: number;\n  /**\n   * The order to return the news in. The following are the possible case-insensitive values. Date:\n   * If the request is through the News Search API, the response returns news articles sorted by\n   * date from the most recent to the oldest. If the request is through the News Trending Topics\n   * API, the response returns trending topics sorted by date from the most recent to the oldest.\n   */\n  sortBy?: string;\n  /**\n   * A Boolean value that determines whether display strings contain decoration markers such as hit\n   * highlighting characters. If true, the strings may include markers. The default is false. To\n   * specify whether to use Unicode characters or HTML tags as the markers, see the\n   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\n   * query parameter. For information about hit highlighting, see [Hit\n   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\n   */\n  textDecorations?: boolean;\n  /**\n   * The type of markers to use for text decorations (see the textDecorations query parameter).\n   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.\n   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and\n   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to\n   * mark content that needs special formatting. For example, use <b> tags to highlight query terms\n   * in display strings. The default is Raw. For display strings that contain escapable HTML\n   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as\n   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n   */\n  textFormat?: TextFormat;\n}\n\n/**\n * Defines values for ErrorCode.\n * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',\n * 'InvalidAuthorization', 'InsufficientAuthorization'\n * @readonly\n * @enum {string}\n */\nexport type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';\n\n/**\n * Defines values for ErrorSubCode.\n * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',\n * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',\n * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',\n * 'AuthorizationExpired'\n * @readonly\n * @enum {string}\n */\nexport type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';\n\n/**\n * Defines values for Freshness.\n * Possible values include: 'Day', 'Week', 'Month'\n * @readonly\n * @enum {string}\n */\nexport type Freshness = 'Day' | 'Week' | 'Month';\n\n/**\n * Defines values for SafeSearch.\n * Possible values include: 'Off', 'Moderate', 'Strict'\n * @readonly\n * @enum {string}\n */\nexport type SafeSearch = 'Off' | 'Moderate' | 'Strict';\n\n/**\n * Defines values for TextFormat.\n * Possible values include: 'Raw', 'Html'\n * @readonly\n * @enum {string}\n */\nexport type TextFormat = 'Raw' | 'Html';\n\n/**\n * Contains response data for the search operation.\n */\nexport type NewsSearchResponse = News & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: News;\n    };\n};\n\n/**\n * Contains response data for the category operation.\n */\nexport type NewsCategoryResponse = News & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: News;\n    };\n};\n\n/**\n * Contains response data for the trending operation.\n */\nexport type NewsTrendingResponse = TrendingTopics & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TrendingTopics;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const ResponseBase: msRest.CompositeMapper = {\n  serializedName: \"ResponseBase\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"ResponseBase\",\n    className: \"ResponseBase\",\n    modelProperties: {\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identifiable: msRest.CompositeMapper = {\n  serializedName: \"Identifiable\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Identifiable\",\n    modelProperties: {\n      ...ResponseBase.type.modelProperties,\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Response: msRest.CompositeMapper = {\n  serializedName: \"Response\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Response\",\n    modelProperties: {\n      ...Identifiable.type.modelProperties,\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Thing: msRest.CompositeMapper = {\n  serializedName: \"Thing\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Thing\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        readOnly: true,\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        readOnly: true,\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      alternateName: {\n        readOnly: true,\n        serializedName: \"alternateName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bingId: {\n        readOnly: true,\n        serializedName: \"bingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreativeWork: msRest.CompositeMapper = {\n  serializedName: \"CreativeWork\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"CreativeWork\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      thumbnailUrl: {\n        readOnly: true,\n        serializedName: \"thumbnailUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        readOnly: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Thing\"\n            }\n          }\n        }\n      },\n      datePublished: {\n        readOnly: true,\n        serializedName: \"datePublished\",\n        type: {\n          name: \"String\"\n        }\n      },\n      video: {\n        readOnly: true,\n        serializedName: \"video\",\n        type: {\n          name: \"Composite\",\n          className: \"VideoObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const Article: msRest.CompositeMapper = {\n  serializedName: \"Article\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Article\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      wordCount: {\n        readOnly: true,\n        serializedName: \"wordCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NewsArticle: msRest.CompositeMapper = {\n  serializedName: \"NewsArticle\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"NewsArticle\",\n    modelProperties: {\n      ...Article.type.modelProperties,\n      category: {\n        readOnly: true,\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      headline: {\n        readOnly: true,\n        serializedName: \"headline\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      clusteredArticles: {\n        readOnly: true,\n        serializedName: \"clusteredArticles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NewsArticle\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Answer: msRest.CompositeMapper = {\n  serializedName: \"Answer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Answer\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      followUpQueries: {\n        readOnly: true,\n        serializedName: \"followUpQueries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SearchResultsAnswer: msRest.CompositeMapper = {\n  serializedName: \"SearchResultsAnswer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"SearchResultsAnswer\",\n    modelProperties: {\n      ...Answer.type.modelProperties,\n      totalEstimatedMatches: {\n        readOnly: true,\n        serializedName: \"totalEstimatedMatches\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const News: msRest.CompositeMapper = {\n  serializedName: \"News\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"News\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NewsArticle\"\n            }\n          }\n        }\n      },\n      location: {\n        readOnly: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MediaObject: msRest.CompositeMapper = {\n  serializedName: \"MediaObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"MediaObject\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      contentUrl: {\n        readOnly: true,\n        serializedName: \"contentUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      width: {\n        readOnly: true,\n        serializedName: \"width\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        readOnly: true,\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageObject: msRest.CompositeMapper = {\n  serializedName: \"ImageObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageObject\",\n    modelProperties: {\n      ...MediaObject.type.modelProperties,\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const Query: msRest.CompositeMapper = {\n  serializedName: \"Query\",\n  type: {\n    name: \"Composite\",\n    className: \"Query\",\n    modelProperties: {\n      text: {\n        required: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayText: {\n        readOnly: true,\n        serializedName: \"displayText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchLink: {\n        readOnly: true,\n        serializedName: \"searchLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const NewsTopic: msRest.CompositeMapper = {\n  serializedName: \"News/Topic\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"NewsTopic\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      isBreakingNews: {\n        readOnly: true,\n        serializedName: \"isBreakingNews\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      query: {\n        readOnly: true,\n        serializedName: \"query\",\n        type: {\n          name: \"Composite\",\n          className: \"Query\"\n        }\n      },\n      newsSearchUrl: {\n        readOnly: true,\n        serializedName: \"newsSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrendingTopics: msRest.CompositeMapper = {\n  serializedName: \"TrendingTopics\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"TrendingTopics\",\n    modelProperties: {\n      ...Answer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NewsTopic\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VideoObject: msRest.CompositeMapper = {\n  serializedName: \"VideoObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"VideoObject\",\n    modelProperties: {\n      ...MediaObject.type.modelProperties,\n      motionThumbnailUrl: {\n        readOnly: true,\n        serializedName: \"motionThumbnailUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      motionThumbnailId: {\n        readOnly: true,\n        serializedName: \"motionThumbnailId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      embedHtml: {\n        readOnly: true,\n        serializedName: \"embedHtml\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowHttpsEmbed: {\n        readOnly: true,\n        serializedName: \"allowHttpsEmbed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      viewCount: {\n        readOnly: true,\n        serializedName: \"viewCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      videoId: {\n        readOnly: true,\n        serializedName: \"videoId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowMobileEmbed: {\n        readOnly: true,\n        serializedName: \"allowMobileEmbed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSuperfresh: {\n        readOnly: true,\n        serializedName: \"isSuperfresh\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Organization: msRest.CompositeMapper = {\n  serializedName: \"Organization\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Organization\",\n    modelProperties: {\n      ...Thing.type.modelProperties\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        defaultValue: 'None',\n        type: {\n          name: \"String\"\n        }\n      },\n      subCode: {\n        readOnly: true,\n        serializedName: \"subCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        required: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      moreDetails: {\n        readOnly: true,\n        serializedName: \"moreDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameter: {\n        readOnly: true,\n        serializedName: \"parameter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      errors: {\n        required: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const discriminators = {\n  'ResponseBase.NewsArticle' : NewsArticle,\n  'ResponseBase.News' : News,\n  'ResponseBase.SearchResultsAnswer' : SearchResultsAnswer,\n  'ResponseBase.ImageObject' : ImageObject,\n  'ResponseBase.News/Topic' : NewsTopic,\n  'ResponseBase.Answer' : Answer,\n  'ResponseBase.Article' : Article,\n  'ResponseBase.Thing' : Thing,\n  'ResponseBase.Response' : Response,\n  'ResponseBase.TrendingTopics' : TrendingTopics,\n  'ResponseBase.VideoObject' : VideoObject,\n  'ResponseBase.CreativeWork' : CreativeWork,\n  'ResponseBase.Organization' : Organization,\n  'ResponseBase.Identifiable' : Identifiable,\n  'ResponseBase.ErrorResponse' : ErrorResponse,\n  'ResponseBase.MediaObject' : MediaObject,\n  'ResponseBase' : ResponseBase\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Answer,\n  Article,\n  CreativeWork,\n  ErrorModel,\n  ErrorResponse,\n  Identifiable,\n  ImageObject,\n  MediaObject,\n  News,\n  NewsArticle,\n  NewsTopic,\n  Organization,\n  Query,\n  Response,\n  ResponseBase,\n  SearchResultsAnswer,\n  Thing,\n  TrendingTopics,\n  VideoObject\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"acceptLanguage\"\n  ],\n  mapper: {\n    serializedName: \"Accept-Language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const category: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"category\"\n  ],\n  mapper: {\n    serializedName: \"category\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientId: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientId\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientID\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientIp: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientIp\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientIP\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const count: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"count\"\n  ],\n  mapper: {\n    serializedName: \"count\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const countryCode: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"countryCode\"\n  ],\n  mapper: {\n    serializedName: \"cc\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: 'https://api.cognitive.microsoft.com',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const freshness: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"freshness\"\n  ],\n  mapper: {\n    serializedName: \"freshness\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const headlineCount: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"headlineCount\"\n  ],\n  mapper: {\n    serializedName: \"headlineCount\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const location: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"location\"\n  ],\n  mapper: {\n    serializedName: \"X-Search-Location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const market: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"market\"\n  ],\n  mapper: {\n    serializedName: \"mkt\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const offset: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"offset\"\n  ],\n  mapper: {\n    serializedName: \"offset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const originalImage: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"originalImage\"\n  ],\n  mapper: {\n    serializedName: \"originalImg\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const query: msRest.OperationQueryParameter = {\n  parameterPath: \"query\",\n  mapper: {\n    required: true,\n    serializedName: \"q\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const safeSearch: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"safeSearch\"\n  ],\n  mapper: {\n    serializedName: \"safeSearch\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const setLang: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"setLang\"\n  ],\n  mapper: {\n    serializedName: \"setLang\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const since: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"since\"\n  ],\n  mapper: {\n    serializedName: \"since\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const sortBy: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"sortBy\"\n  ],\n  mapper: {\n    serializedName: \"sortBy\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const textDecorations: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"textDecorations\"\n  ],\n  mapper: {\n    serializedName: \"textDecorations\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const textFormat: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"textFormat\"\n  ],\n  mapper: {\n    serializedName: \"textFormat\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const userAgent: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"userAgent\"\n  ],\n  mapper: {\n    serializedName: \"User-Agent\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const xBingApisSDK: msRest.OperationParameter = {\n  parameterPath: \"xBingApisSDK\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"X-BingApis-SDK\",\n    defaultValue: 'true',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/newsOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { NewsSearchClientContext } from \"../newsSearchClientContext\";\n\n/** Class representing a NewsOperations. */\nexport class NewsOperations {\n  private readonly client: NewsSearchClientContext;\n\n  /**\n   * Create a NewsOperations.\n   * @param {NewsSearchClientContext} client Reference to the service client.\n   */\n  constructor(client: NewsSearchClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary The News Search API lets you send a search query to Bing and get back a list of news\n   * that are relevant to the search query. This section provides technical details about the query\n   * parameters and headers that you use to request news and the JSON response objects that contain\n   * them.  For examples that show how to make requests, see [Searching the web for\n   * news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\n   * @param query The user's search query string. The query string cannot be empty. The query string\n   * may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\n   * example, to limit news to a specific domain, use the\n   * [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use this parameter only with\n   * the News Search API. Do not specify this parameter when calling the Trending Topics API or News\n   * Category API.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.NewsSearchResponse>\n   */\n  search(query: string, options?: Models.NewsSearchOptionalParams): Promise<Models.NewsSearchResponse>;\n  /**\n   * @param query The user's search query string. The query string cannot be empty. The query string\n   * may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\n   * example, to limit news to a specific domain, use the\n   * [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use this parameter only with\n   * the News Search API. Do not specify this parameter when calling the Trending Topics API or News\n   * Category API.\n   * @param callback The callback\n   */\n  search(query: string, callback: msRest.ServiceCallback<Models.News>): void;\n  /**\n   * @param query The user's search query string. The query string cannot be empty. The query string\n   * may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\n   * example, to limit news to a specific domain, use the\n   * [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use this parameter only with\n   * the News Search API. Do not specify this parameter when calling the Trending Topics API or News\n   * Category API.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  search(query: string, options: Models.NewsSearchOptionalParams, callback: msRest.ServiceCallback<Models.News>): void;\n  search(query: string, options?: Models.NewsSearchOptionalParams | msRest.ServiceCallback<Models.News>, callback?: msRest.ServiceCallback<Models.News>): Promise<Models.NewsSearchResponse> {\n    return this.client.sendOperationRequest(\n      {\n        query,\n        options\n      },\n      searchOperationSpec,\n      callback) as Promise<Models.NewsSearchResponse>;\n  }\n\n  /**\n   * @summary The News Category API lets you search on Bing and get back a list of top news articles\n   * by category. This section provides technical details about the query parameters and headers that\n   * you use to request news and the JSON response objects that contain them.  For examples that show\n   * how to make requests, see [Searching the web for\n   * news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.NewsCategoryResponse>\n   */\n  category(options?: Models.NewsCategoryOptionalParams): Promise<Models.NewsCategoryResponse>;\n  /**\n   * @param callback The callback\n   */\n  category(callback: msRest.ServiceCallback<Models.News>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  category(options: Models.NewsCategoryOptionalParams, callback: msRest.ServiceCallback<Models.News>): void;\n  category(options?: Models.NewsCategoryOptionalParams | msRest.ServiceCallback<Models.News>, callback?: msRest.ServiceCallback<Models.News>): Promise<Models.NewsCategoryResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      categoryOperationSpec,\n      callback) as Promise<Models.NewsCategoryResponse>;\n  }\n\n  /**\n   * @summary The News Trending Topics API lets you search on Bing and get back a list of trending\n   * news topics that are currently trending on Bing. This section provides technical details about\n   * the query parameters and headers that you use to request news and the JSON response objects that\n   * contain them.  For examples that show how to make requests, see [Searching the web for\n   * news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.NewsTrendingResponse>\n   */\n  trending(options?: Models.NewsTrendingOptionalParams): Promise<Models.NewsTrendingResponse>;\n  /**\n   * @param callback The callback\n   */\n  trending(callback: msRest.ServiceCallback<Models.TrendingTopics>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  trending(options: Models.NewsTrendingOptionalParams, callback: msRest.ServiceCallback<Models.TrendingTopics>): void;\n  trending(options?: Models.NewsTrendingOptionalParams | msRest.ServiceCallback<Models.TrendingTopics>, callback?: msRest.ServiceCallback<Models.TrendingTopics>): Promise<Models.NewsTrendingResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      trendingOperationSpec,\n      callback) as Promise<Models.NewsTrendingResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst searchOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"news/search\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.countryCode,\n    Parameters.count,\n    Parameters.freshness,\n    Parameters.market,\n    Parameters.offset,\n    Parameters.originalImage,\n    Parameters.query,\n    Parameters.safeSearch,\n    Parameters.setLang,\n    Parameters.sortBy,\n    Parameters.textDecorations,\n    Parameters.textFormat\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.News\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst categoryOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"news\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.countryCode,\n    Parameters.category,\n    Parameters.count,\n    Parameters.headlineCount,\n    Parameters.market,\n    Parameters.offset,\n    Parameters.originalImage,\n    Parameters.safeSearch,\n    Parameters.setLang,\n    Parameters.textDecorations,\n    Parameters.textFormat\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.News\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst trendingOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"news/trendingtopics\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.countryCode,\n    Parameters.count,\n    Parameters.market,\n    Parameters.offset,\n    Parameters.safeSearch,\n    Parameters.setLang,\n    Parameters.since,\n    Parameters.sortBy,\n    Parameters.textDecorations,\n    Parameters.textFormat\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TrendingTopics\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\n\nconst packageName = \"@azure/cognitiveservices-newssearch\";\nconst packageVersion = \"3.0.1\";\n\nexport class NewsSearchClientContext extends msRest.ServiceClient {\n  endpoint?: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the NewsSearchClientContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.NewsSearchClientOptions) {\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.endpoint = 'https://api.cognitive.microsoft.com';\n    this.baseUri = \"{Endpoint}/bing/v7.0\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    if (options.endpoint !== null && options.endpoint !== undefined) {\n      this.endpoint = options.endpoint;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { NewsSearchClientContext } from \"./newsSearchClientContext\";\n\nclass NewsSearchClient extends NewsSearchClientContext {\n  // Operation groups\n  news: operations.NewsOperations;\n\n  /**\n   * Initializes a new instance of the NewsSearchClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.NewsSearchClientOptions) {\n    super(credentials, options);\n    this.news = new operations.NewsOperations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  NewsSearchClient,\n  NewsSearchClientContext,\n  Models as NewsSearchModels,\n  Mappers as NewsSearchMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.Serializer","Parameters.endpoint","Parameters.countryCode","Parameters.count","Parameters.freshness","Parameters.market","Parameters.offset","Parameters.originalImage","Parameters.query","Parameters.safeSearch","Parameters.setLang","Parameters.sortBy","Parameters.textDecorations","Parameters.textFormat","Parameters.xBingApisSDK","Parameters.acceptLanguage","Parameters.userAgent","Parameters.clientId","Parameters.clientIp","Parameters.location","Mappers.News","Mappers.ErrorResponse","Parameters.category","Parameters.headlineCount","Parameters.since","Mappers.TrendingTopics","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.NewsOperations"],"mappings":"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"}